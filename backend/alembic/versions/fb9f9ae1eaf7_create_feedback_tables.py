"""create feedback tables

Revision ID: fb9f9ae1eaf7
Revises: 20952366ef94
Create Date: 2025-09-29 15:38:38.394795

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fb9f9ae1eaf7'
down_revision: Union[str, Sequence[str], None] = '20952366ef94'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedbacks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedbacks_id'), 'feedbacks', ['id'], unique=True)
    op.create_index('ix_feedbacks_user_created', 'feedbacks', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_feedbacks_user_id'), 'feedbacks', ['user_id'], unique=False)
    op.drop_index(op.f('ix_dog_activities_activity_type'), table_name='dog_activities')
    op.drop_index(op.f('ix_dog_activities_dog_id'), table_name='dog_activities')
    op.drop_index(op.f('ix_dog_activities_dog_when_type'), table_name='dog_activities')
    op.drop_index(op.f('ix_dog_activities_id'), table_name='dog_activities')
    op.drop_index(op.f('ix_dog_activities_occurred_at'), table_name='dog_activities')
    op.drop_table('dog_activities')
    op.drop_index(op.f('ix_dog_progress_entries_dog_id'), table_name='dog_progress_entries')
    op.drop_index(op.f('ix_dog_progress_entries_id'), table_name='dog_progress_entries')
    op.drop_index(op.f('ix_dog_progress_entries_metric_id'), table_name='dog_progress_entries')
    op.drop_index(op.f('ix_progress_dog_metric_time'), table_name='dog_progress_entries')
    op.drop_table('dog_progress_entries')
    op.alter_column('admin_settings', 'tip',
               existing_type=sa.VARCHAR(length=2000),
               nullable=False)
    op.create_index(op.f('ix_admin_settings_id'), 'admin_settings', ['id'], unique=True)
    op.create_unique_constraint(None, 'admin_settings', ['singleton_key'])
    op.create_index(op.f('ix_articles_author_id'), 'articles', ['author_id'], unique=False)
    op.create_index(op.f('ix_articles_id'), 'articles', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_articles_id'), table_name='articles')
    op.drop_index(op.f('ix_articles_author_id'), table_name='articles')
    op.drop_constraint(None, 'admin_settings', type_='unique')
    op.drop_index(op.f('ix_admin_settings_id'), table_name='admin_settings')
    op.alter_column('admin_settings', 'tip',
               existing_type=sa.VARCHAR(length=2000),
               nullable=True)
    op.create_table('dog_progress_entries',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('dog_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('metric_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('measured_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], name=op.f('dog_progress_entries_dog_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['metric_id'], ['progress_metrics.id'], name=op.f('dog_progress_entries_metric_id_fkey'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('dog_progress_entries_pkey'))
    )
    op.create_index(op.f('ix_progress_dog_metric_time'), 'dog_progress_entries', ['dog_id', 'metric_id', 'measured_at'], unique=False)
    op.create_index(op.f('ix_dog_progress_entries_metric_id'), 'dog_progress_entries', ['metric_id'], unique=False)
    op.create_index(op.f('ix_dog_progress_entries_id'), 'dog_progress_entries', ['id'], unique=True)
    op.create_index(op.f('ix_dog_progress_entries_dog_id'), 'dog_progress_entries', ['dog_id'], unique=False)
    op.create_table('dog_activities',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('dog_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('occurred_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('duration_min', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('calories', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('activity_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], name=op.f('dog_activities_dog_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('dog_activities_pkey'))
    )
    op.create_index(op.f('ix_dog_activities_occurred_at'), 'dog_activities', ['occurred_at'], unique=False)
    op.create_index(op.f('ix_dog_activities_id'), 'dog_activities', ['id'], unique=True)
    op.create_index(op.f('ix_dog_activities_dog_when_type'), 'dog_activities', ['dog_id', 'occurred_at', 'activity_type'], unique=False)
    op.create_index(op.f('ix_dog_activities_dog_id'), 'dog_activities', ['dog_id'], unique=False)
    op.create_index(op.f('ix_dog_activities_activity_type'), 'dog_activities', ['activity_type'], unique=False)
    op.drop_index(op.f('ix_feedbacks_user_id'), table_name='feedbacks')
    op.drop_index('ix_feedbacks_user_created', table_name='feedbacks')
    op.drop_index(op.f('ix_feedbacks_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    # ### end Alembic commands ###
