"""additonal tables

Revision ID: d0172a594817
Revises: 
Create Date: 2025-08-22 16:42:26.354416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd0172a594817'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('slug', sa.String(length=80), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_badges_id'), 'badges', ['id'], unique=True)
    op.create_index(op.f('ix_badges_slug'), 'badges', ['slug'], unique=True)
    op.create_table('progress_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(length=80), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('unit', sa.String(length=40), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_progress_metrics_id'), 'progress_metrics', ['id'], unique=True)
    op.create_index(op.f('ix_progress_metrics_key'), 'progress_metrics', ['key'], unique=True)
    op.create_table('protocols',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'ARCHIVED', name='protocolstatus', native_enum=False), nullable=False),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug', 'version', name='uq_protocols_slug_version')
    )
    op.create_index(op.f('ix_protocols_id'), 'protocols', ['id'], unique=True)
    op.create_index(op.f('ix_protocols_slug'), 'protocols', ['slug'], unique=True)
    op.create_index(op.f('ix_protocols_status'), 'protocols', ['status'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=120), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=120), nullable=True),
    sa.Column('stripe_price_id', sa.String(length=120), nullable=True),
    sa.Column('subscription_tier', sa.Enum('FOUNDATION', 'THERAPEUTIC', 'COMPREHENSIVE', name='subscriptiontier', native_enum=False), nullable=False),
    sa.Column('subscription_status', sa.Enum('INCOMPLETE', 'INCOMPLETE_EXPIRED', 'TRIALING', 'ACTIVE', 'PAST_DUE', 'CANCELED', 'UNPAID', name='subscriptionstatus', native_enum=False), nullable=False),
    sa.Column('subscription_current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_on_trial', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index('ix_users_email_username', 'users', ['email', 'username'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_index(op.f('ix_users_stripe_customer_id'), 'users', ['stripe_customer_id'], unique=True)
    op.create_index(op.f('ix_users_stripe_price_id'), 'users', ['stripe_price_id'], unique=False)
    op.create_index(op.f('ix_users_stripe_subscription_id'), 'users', ['stripe_subscription_id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('dogs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('breed', sa.String(length=120), nullable=True),
    sa.Column('sex', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'name', name='uq_dogs_owner_name')
    )
    op.create_index(op.f('ix_dogs_id'), 'dogs', ['id'], unique=True)
    op.create_index(op.f('ix_dogs_owner_id'), 'dogs', ['owner_id'], unique=False)
    op.create_table('payment_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=80), nullable=False),
    sa.Column('stripe_object_id', sa.String(length=120), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_object_id', 'event_type', name='uq_payment_events_obj_event')
    )
    op.create_index(op.f('ix_payment_events_id'), 'payment_events', ['id'], unique=True)
    op.create_index('ix_payment_events_user_event', 'payment_events', ['user_id', 'event_type'], unique=False)
    op.create_index(op.f('ix_payment_events_user_id'), 'payment_events', ['user_id'], unique=False)
    op.create_table('dog_activities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('activity_type', sa.Enum('WALK', 'MEAL', 'TRAINING', 'VET_VISIT', 'MEDICATION', 'PLAY', 'OTHER', name='activitytype', native_enum=False), nullable=False),
    sa.Column('occurred_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_min', sa.Float(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('activity_metadata', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dog_activities_activity_type'), 'dog_activities', ['activity_type'], unique=False)
    op.create_index(op.f('ix_dog_activities_dog_id'), 'dog_activities', ['dog_id'], unique=False)
    op.create_index('ix_dog_activities_dog_when_type', 'dog_activities', ['dog_id', 'occurred_at', 'activity_type'], unique=False)
    op.create_index(op.f('ix_dog_activities_id'), 'dog_activities', ['id'], unique=True)
    op.create_index(op.f('ix_dog_activities_occurred_at'), 'dog_activities', ['occurred_at'], unique=False)
    op.create_table('dog_progress_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('metric_id', sa.UUID(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('measured_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['metric_id'], ['progress_metrics.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dog_progress_entries_dog_id'), 'dog_progress_entries', ['dog_id'], unique=False)
    op.create_index(op.f('ix_dog_progress_entries_id'), 'dog_progress_entries', ['id'], unique=True)
    op.create_index(op.f('ix_dog_progress_entries_metric_id'), 'dog_progress_entries', ['metric_id'], unique=False)
    op.create_index('ix_progress_dog_metric_time', 'dog_progress_entries', ['dog_id', 'metric_id', 'measured_at'], unique=False)
    op.create_table('dog_protocols',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('protocol_id', sa.UUID(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('overrides', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['protocol_id'], ['protocols.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dog_id', 'protocol_id', 'started_at', name='uq_dog_protocol_instance')
    )
    op.create_index('ix_dog_protocols_dog_active', 'dog_protocols', ['dog_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_dog_protocols_dog_id'), 'dog_protocols', ['dog_id'], unique=False)
    op.create_index(op.f('ix_dog_protocols_id'), 'dog_protocols', ['id'], unique=True)
    op.create_index(op.f('ix_dog_protocols_protocol_id'), 'dog_protocols', ['protocol_id'], unique=False)
    op.create_table('todos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'DONE', 'SKIPPED', name='todostatus', native_enum=False), nullable=False),
    sa.Column('due_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todos_dog_id'), 'todos', ['dog_id'], unique=False)
    op.create_index('ix_todos_dog_status_due', 'todos', ['dog_id', 'status', 'due_at'], unique=False)
    op.create_index(op.f('ix_todos_id'), 'todos', ['id'], unique=True)
    op.create_index(op.f('ix_todos_status'), 'todos', ['status'], unique=False)
    op.create_table('wins',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('occurred_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wins_dog_id'), 'wins', ['dog_id'], unique=False)
    op.create_index(op.f('ix_wins_id'), 'wins', ['id'], unique=True)
    op.create_table('dog_badges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('badge_id', sa.UUID(), nullable=False),
    sa.Column('win_id', sa.UUID(), nullable=True),
    sa.Column('awarded_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['win_id'], ['wins.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dog_id', 'badge_id', name='uq_dog_badge_once')
    )
    op.create_index(op.f('ix_dog_badges_badge_id'), 'dog_badges', ['badge_id'], unique=False)
    op.create_index('ix_dog_badges_dog_badge', 'dog_badges', ['dog_id', 'badge_id'], unique=False)
    op.create_index(op.f('ix_dog_badges_dog_id'), 'dog_badges', ['dog_id'], unique=False)
    op.create_index(op.f('ix_dog_badges_id'), 'dog_badges', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dog_badges_id'), table_name='dog_badges')
    op.drop_index(op.f('ix_dog_badges_dog_id'), table_name='dog_badges')
    op.drop_index('ix_dog_badges_dog_badge', table_name='dog_badges')
    op.drop_index(op.f('ix_dog_badges_badge_id'), table_name='dog_badges')
    op.drop_table('dog_badges')
    op.drop_index(op.f('ix_wins_id'), table_name='wins')
    op.drop_index(op.f('ix_wins_dog_id'), table_name='wins')
    op.drop_table('wins')
    op.drop_index(op.f('ix_todos_status'), table_name='todos')
    op.drop_index(op.f('ix_todos_id'), table_name='todos')
    op.drop_index('ix_todos_dog_status_due', table_name='todos')
    op.drop_index(op.f('ix_todos_dog_id'), table_name='todos')
    op.drop_table('todos')
    op.drop_index(op.f('ix_dog_protocols_protocol_id'), table_name='dog_protocols')
    op.drop_index(op.f('ix_dog_protocols_id'), table_name='dog_protocols')
    op.drop_index(op.f('ix_dog_protocols_dog_id'), table_name='dog_protocols')
    op.drop_index('ix_dog_protocols_dog_active', table_name='dog_protocols')
    op.drop_table('dog_protocols')
    op.drop_index('ix_progress_dog_metric_time', table_name='dog_progress_entries')
    op.drop_index(op.f('ix_dog_progress_entries_metric_id'), table_name='dog_progress_entries')
    op.drop_index(op.f('ix_dog_progress_entries_id'), table_name='dog_progress_entries')
    op.drop_index(op.f('ix_dog_progress_entries_dog_id'), table_name='dog_progress_entries')
    op.drop_table('dog_progress_entries')
    op.drop_index(op.f('ix_dog_activities_occurred_at'), table_name='dog_activities')
    op.drop_index(op.f('ix_dog_activities_id'), table_name='dog_activities')
    op.drop_index('ix_dog_activities_dog_when_type', table_name='dog_activities')
    op.drop_index(op.f('ix_dog_activities_dog_id'), table_name='dog_activities')
    op.drop_index(op.f('ix_dog_activities_activity_type'), table_name='dog_activities')
    op.drop_table('dog_activities')
    op.drop_index(op.f('ix_payment_events_user_id'), table_name='payment_events')
    op.drop_index('ix_payment_events_user_event', table_name='payment_events')
    op.drop_index(op.f('ix_payment_events_id'), table_name='payment_events')
    op.drop_table('payment_events')
    op.drop_index(op.f('ix_dogs_owner_id'), table_name='dogs')
    op.drop_index(op.f('ix_dogs_id'), table_name='dogs')
    op.drop_table('dogs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_stripe_subscription_id'), table_name='users')
    op.drop_index(op.f('ix_users_stripe_price_id'), table_name='users')
    op.drop_index(op.f('ix_users_stripe_customer_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index('ix_users_email_username', table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_protocols_status'), table_name='protocols')
    op.drop_index(op.f('ix_protocols_slug'), table_name='protocols')
    op.drop_index(op.f('ix_protocols_id'), table_name='protocols')
    op.drop_table('protocols')
    op.drop_index(op.f('ix_progress_metrics_key'), table_name='progress_metrics')
    op.drop_index(op.f('ix_progress_metrics_id'), table_name='progress_metrics')
    op.drop_table('progress_metrics')
    op.drop_index(op.f('ix_badges_slug'), table_name='badges')
    op.drop_index(op.f('ix_badges_id'), table_name='badges')
    op.drop_table('badges')
    # ### end Alembic commands ###
